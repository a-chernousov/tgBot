package tgBt;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.*;



public class QuestionBot extends TelegramLongPollingBot {
    private Map<Long, Sender> userSessions = new HashMap<>();
    private Map<String, Command> commands = new HashMap<>();
    private QuestionSet questionSet;

    public QuestionBot() {
        questionSet = new QuestionSet();
        try {
            InputStream inputStream = QuestionSet.class.getClassLoader().getResourceAsStream("lotr_questions.json");
            if (inputStream == null) {
                throw new FileNotFoundException("–§–∞–π–ª lotr_questions.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ—Å—É—Ä—Å–∞—Ö.");
            }
            QuestionSet.getInstance().loadFromJson(inputStream);



        } catch (IOException e) {
            System.err.println("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: " + e.getMessage());
        }

        commands.put("/exam", new ExamCommand(questionSet));
        commands.put("/study", new StudyCommand(questionSet));
        commands.put("/learn", new LearnCommand(questionSet));
        commands.put("/lotr", new StudyCommand(questionSet)); // –ê–ª–∏–∞—Å –¥–ª—è —Ç–µ–º–∞—Ç–∏–∫–∏
    }

    @Override
    public void onUpdateReceived(Update update) {
        SendMessage reply = new SendMessage();
        try {
            long chatId = update.getMessage().getChatId();
            reply.setChatId(String.valueOf(chatId));
            String text = update.getMessage().getText();

            System.out.println(">>> –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + text + " –æ—Ç chatId: " + chatId);

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã, –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
            InputStream inputStream = QuestionSet.class.getClassLoader().getResourceAsStream("lotr_questions.json");
            if (inputStream == null) {
                throw new FileNotFoundException("–§–∞–π–ª lotr_questions.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ—Å—É—Ä—Å–∞—Ö.");
            }
            QuestionSet.getInstance().loadFromJson(inputStream);

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
            Sender sender = userSessions.get(chatId);
            if (sender != null) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –∫–∞–∫ –æ—Ç–≤–µ—Ç
                String response = sender.handleInput(text);
                if (sender.isFinished()) {
                    userSessions.remove(chatId);
                }
                reply.setText(response);
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
                Command command = Command.fromText(text);
                if (command == null) {
                    // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
                    reply.setText(
                            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å:\n" +
                                    "‚öîÔ∏è /exam - –ò—Å–ø—ã—Ç–∞–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–∏ (5 –≤–æ–ø—Ä–æ—Å–æ–≤)\n" +
                                    "üìñ /study - –°–∞–≥–∏ –∏ –ø—Ä–µ–¥–∞–Ω–∏—è\n" +
                                    "üßô /learn - –£—á–µ–Ω–∏–µ —É –º–∞–≥–æ–≤\n" +
                                    "‚ùå /cancel - –ü–æ–∫–∏–Ω—É—Ç—å —Å–æ–≤–µ—Ç"
                    );
                } else {
                    Sender newSender = command.execute(chatId);
                    if (newSender != null) {
                        userSessions.put(chatId, newSender);
                        reply = newSender.createSendMessage();
                    } else {
                        reply.setText("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            reply.setText("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –≤ –°—Ä–µ–¥–∏–∑–µ–º—å–µ... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ");
        }

        try {
            execute(reply);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }


    private void handleCommand(long chatId, String commandText, SendMessage reply) {
        switch (commandText.toLowerCase()) {
            case "/start":
                reply.setText("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –•—Ä–∞–Ω–∏—Ç–µ–ª—å –ö–æ–ª–µ—Ü!\n\n" +
                        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å:\n" +
                        "‚öîÔ∏è /exam - –ò—Å–ø—ã—Ç–∞–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–∏ (5 –≤–æ–ø—Ä–æ—Å–æ–≤)\n" +
                        "üìñ /study - –°–∞–≥–∏ –∏ –ø—Ä–µ–¥–∞–Ω–∏—è\n" +
                        "üßô /learn - –£—á–µ–Ω–∏–µ —É –º–∞–≥–æ–≤\n" +
                        "‚ùå /cancel - –ü–æ–∫–∏–Ω—É—Ç—å —Å–æ–≤–µ—Ç");
                break;

            case "/cancel":
                userSessions.remove(chatId);
                reply.setText("–°–æ–≤–µ—Ç —Ä–∞—Å–ø—É—â–µ–Ω. –ö–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø—É—Ç—å:");
                break;

            default:
                Command command = commands.get(commandText.toLowerCase());
                if (command != null) {
                    Sender sender = command.execute(chatId);
                    if (sender != null) {
                        userSessions.put(chatId, sender);
                        reply = sender.createSendMessage();
                    } else {
                        reply.setText("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
                    }
                } else {
                    reply.setText("–¢–∞–∫–æ–≥–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –Ω–µ—Ç –≤ –º–æ–∏—Ö –∫–Ω–∏–≥–∞—Ö!\n\n" +
                            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—É—Ç–∏:\n" +
                            "‚öîÔ∏è /exam - –ò—Å–ø—ã—Ç–∞–Ω–∏–µ\n" +
                            "üìñ /study - –°–∞–≥–∏\n" +
                            "üßô /learn - –£—á–µ–Ω–∏–µ");
                }
        }
    }

    private void handleMessage(long chatId, String text, SendMessage reply) {
        Sender sender = userSessions.get(chatId);

        if (sender == null) {
            reply.setText("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å, —Å—Ç—Ä–∞–Ω–Ω–∏–∫:\n" +
                    "‚öîÔ∏è /exam - –ò—Å–ø—ã—Ç–∞–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–∏\n" +
                    "üìñ /study - –°–∞–≥–∏ –∏ –ø—Ä–µ–¥–∞–Ω–∏—è\n" +
                    "üßô /learn - –£—á–µ–Ω–∏–µ —É –º–∞–≥–æ–≤");
            return;
        }

        try {
            sender.onMessageReceived(text);
            reply = sender.createSendMessage();
        } catch (Exception e) {
            reply.setText("–¢—å–º–∞ –æ–∫—É—Ç–∞–ª–∞ –º–æ–π —Ä–∞–∑—É–º... –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ /start");
            userSessions.remove(chatId);
        }
    }

    private void decorateWithLotRTheme(SendMessage message) {
        String text = message.getText();
        List<String> quotes = Arrays.asList(
                "\n\n¬´–ù–µ –≤—Å–µ —Ç–µ, –∫—Ç–æ –±–ª—É–∂–¥–∞—é—Ç, –ø–æ—Ç–µ—Ä—è–Ω—ã¬ª - –ì—ç–Ω–¥–∞–ª—å—Ñ",
                "\n\n¬´–î–∞–∂–µ —Å–∞–º—ã–π –º–∞–ª—ã–π –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Ö–æ–¥ –±—É–¥—É—â–µ–≥–æ¬ª - –ì–∞–ª–∞–¥—Ä–∏—ç–ª—å",
                "\n\n¬´–û–ø–∞—Å–Ω–æ–µ –¥–µ–ª–æ ‚Äî –≤—ã—Ö–æ–¥–∏—Ç—å –∑–∞ –¥–≤–µ—Ä—å¬ª - –ë–∏–ª—å–±–æ –ë—ç–≥–≥–∏–Ω—Å"
        );

        if (!text.contains("–ì—ç–Ω–¥–∞–ª—å—Ñ") && !text.contains("–°–∞—É—Ä–æ–Ω") &&
                !text.contains("–°—Ä–µ–¥–∏–∑–µ–º—å–µ") && new Random().nextInt(3) == 0) {
            message.setText(text + quotes.get(new Random().nextInt(quotes.size())));
        }
    }

    @Override
    public String getBotUsername() {
        return "QuestionBot";
    }

    @Override
    public String getBotToken() {
        return "7856207138:AAHuWf8t8KYm1Oc45SvDzYGnAYJvtmicoGE";
    }
}
