package tgBt.question;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import tgBt.Command;
import tgBt.Sender;

import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

public class QuestionBot extends TelegramLongPollingBot {

    private final Map<Long, Sender> userSessions = new HashMap<>();

    @Override
    public void onUpdateReceived(Update update) {
        SendMessage reply = new SendMessage();
        try {
            long chatId = update.getMessage().getChatId();
            String text = update.getMessage().getText();
            reply.setChatId(String.valueOf(chatId));

            System.out.println(">>> –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + text + " –æ—Ç chatId: " + chatId);

            // –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ (–æ–¥–∏–Ω —Ä–∞–∑)
            InputStream inputStream = QuestionSet.class.getClassLoader().getResourceAsStream("lotr_questions.json");
            if (inputStream == null) {
                throw new RuntimeException("–§–∞–π–ª lotr_questions.json –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            }
            QuestionSet.getInstance().loadFromJson(inputStream);

            Sender sender = userSessions.get(chatId);

            if (text.startsWith("/")) {
                // –ö–æ–º–∞–Ω–¥–∞
                Command command = Command.fromText(text);
                if (command != null) {
                    sender = command.execute(chatId);
                    userSessions.put(chatId, sender);
                    reply = sender.createSendMessage();
                }
                else if (text.equals("/start")){
                    msgHello(reply);
                }
                else {
                    msgHello(reply);
                }
            } else {
                // –û—Ç–≤–µ—Ç –≤ —Ä–∞–º–∫–∞—Ö —Å–µ—Å—Å–∏–∏
                if (sender != null) {
                    sender.onMessageReceived(text);
                    reply = sender.createSendMessage();
                } else {
                    msgHello(reply);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            reply.setText("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –≤ –°—Ä–µ–¥–∏–∑–µ–º—å–µ... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }

        try {
            execute(reply);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return "QuestionBot";
    }

    @Override
    public String getBotToken() {
        try (InputStream input = getClass().getClassLoader().getResourceAsStream("config.properties")) {
            Properties prop = new Properties();
            prop.load(input);
            return prop.getProperty("TELEGRAM_BOT_TOKEN");
        } catch (Exception e) {
            throw new RuntimeException("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ config.properties", e);
        }
    }



    private void msgHello(SendMessage reply){
        reply.setText(
                        "‚öîÔ∏è /exam - –ò—Å–ø—ã—Ç–∞–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç–∏ (5 –≤–æ–ø—Ä–æ—Å–æ–≤)\n" +
                        "üìñ /study - –°–∞–≥–∏ –∏ –ø—Ä–µ–¥–∞–Ω–∏—è\n" +
                        "üßô /learn - –£—á–µ–Ω–∏–µ —É –º–∞–≥–æ–≤\n");
    }
}








